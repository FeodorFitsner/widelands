build-13:
- Count casualties/kills, military/civilian buildings lost/defeated and present
  them in the general statistics menu (except for civilian buildings defeated,
  which is omitted from the user interface).
- Improved map options menu.
- Implemented counting of casualties and kills and added this data to the
  general statistics.
- Improved progresswindow use and added new loading screens.
- Added menu for editor to the mainmenu.
- Improved save game dialog.
- Improved mapselect and launchgame menu.
- Improved ingame UI.
- Implemented "/me" command for multiplayer chat.
- Improved multiplayermenu.
- Improved optionsmenu and added possibility to set autosave interval.
- Implemented option for maximum FPS to smaller CPU-usage.
- Improved editor new map dialog.
- Made automatic roadbuilding mode after creation of non-connected flag optional.
- Improved production program handling:
	* Eliminated the need for line numbers in the programs.
	* Fixed bug that the consume command required that all wares in a
	  consume-group must be of the same type. For example the command
	  "2=consume smoked_fish,smoked_meat 2" required 2 smoked_fish
	  or 2 smoked_meat. Now it will also work if there is only one of each.
	* Change the syntax of a consume-group to ware1[,ware2[,...]][:quantitiy]
	  (for example "smoked_fish,smoked_meat:2").
	* Extend the consume command to take any number of consume-groups (for
	  example "smoked_fish,smoked_meat:2 bread:2"). This means that unless all
	  consume-groups can be satisfied, nothing is consumed when the command fails.
	  This will fix many bugs in the game data where programs had for example
	  "2=consume smoked_fish,smoked_meat 2" and "3=consume bread 2". If there was
	  not 2 bread, it would consume 2 smoked_fish or 2 smoked_meat and then fail.
	* Get rid of the command check. It was only a work-around for the previously
	  deficient command consume (and some programs forgot to use it).
	* Implement the new command return. It can return from a program. There are
	  3 different return values; Failed, Completed and Skipped. Only programs
	  returning Failed and Completed will affect statistics. A program that
	  reaches the end will be considered to have implicitly returned Completed.
	  The return command can optionally take a condition. Currently only two
	  conditions are supported; economy needs ware_type and workers need
	  experience. The former will allow a program to have a command
	  "return=skipped unless economy needs marblecolumn". It will prevent Game
	  Over as a result of a production deadlock on marble when a user forgets to
	  turn off a stonemason for a while. This fixes the huge problem with
	  production deadlocks that hit every new player in their first games and
	  every experienced player once in a while. The condition makes a query to
	  the economy, which now simply checks if there are no warehouse supplies
	  that supply the ware type. This can of course be made much smarter later.
	  The latter is used in the barbarian micro-brewery to let it practice making
	  beer until the brewer has become a master_brewer even if the economy does
	  not need any beer.
	* Extend the produce command to take any number of ware types with quantities.
	* Fix the call command to validate that the called program exists. This
	  requires changing declaration order in some data files (for example if
	  "work" calls "seed", "program=seed" must come before "program=work" in the
	  "global" section of the productionsite definition. (However the definition
	  order of the programs does not matter.) This fixes the bug that a call
	  command may fail at run-time because the called program does not exists.
	* Extend the call command with an optional error handling specification
	  (call=<program_name> [on failure {ignore|repeat|fail}]). It will make it
	  possible to ignore a failure of a called program and continue the calling
	  program, or repeat the failed program until it succeeds.
	* Extend the sleep and animate commands. If no duration is given as the last
	  parameter, the return value from a previous action is used for duration.
	  This makes it possible to for example let the mining command calculate how
	  long the following sleep/animation should last, depending on ore
	  concentration and mining depth.
	* Get rid of the set command and the associated catch and nostats flags.
	* Fix the mine command to parse and validate its parameters at parse-time
	  instead of at run-time. This fixes the bug that the game engine could fail
	  with the message "Should mine resource <resource_type>, which doesn't exist
	  in world. Tribe is not compatible with world!!" at run-time the first time
	  a mining command is executed.
	* Fix most other commands that had insufficient validation or did parsing at
	  run-time (for example the consume command reparsed its wares at each execution).
	* Optimize the parsing by eliminating needless string copying.
- Rename the building property "enhance_to" to "enhancement" and validate that
  the given building type exists.
- Improved editor handling of bobs and animals, so they can not be placed on
  invalid locations.
- Implemented loading of savegames in multi player
- Only allow attacking seen buildings.
- Improved computer player behaviour.
- Updated and cleaned up tribes economies.
- Introduced automatic update of Campaign-list via campaign-menu.
- Added four new in game songs.
- Added global objects usable in every world.
- Added 12 new maps (9 from map contest).
- Added atlantean building graphics.
- Added a lot of new sounds and integrated them in the game.
- Rework of campaign missions.
- Fix bugs in parsing of building types's buildcosts and inputs. Check that the
  ware types exist and are not duplicated and that the quantities are within range.
- Fix bug in parsing of productionsite types' outputs. Check that the ware types
  exist and are not duplicated.
- Fix bugs in parsing of productionsite types', critter_bob types' and worker
  types' programs. If a program was declared twice, it was parsed twice and the
  memory used to store the first instance was leaked.
- Fixed bugs with drop-soldier commands: If such a command was given and then the
  game was saved before the command was executed (because the game was paused), the
  command was saved incorrectly. And even if the savegame would have had such a
  command correctly saved, the loading code would not have recognized it.
- Removed the trainingsite options window. The "Make heros" button was suspected of
  being able to cause desync in network games.
- Fixed bugs that attack, change-soldier-capacity and set-ware-priority commands were
  not recognized when encountered in savegames.
- Fixed bug that set-ware-priority commands were saved as enhance-building commands.
- Change game rule: Forbid upgrading any building to any type of building. Only allow
  upgrading to one of the defined enhancements. This is the behaviour that was
  intended and that the user interface obeys. Now also the game logic enforces it.
  This prevents users from circumventing the user interface and do arbitrary building
  upgrades, which other players may consider cheating in a network game.
- Fix program crash (or worse) when a worker type was declared to have an ingredient
  that had not been defined.
- Forbid declaring that a building can be enhanced to its own type or the special
  type constructionsite.
- Do not let the constructionsite crash the game if a building type did not define
  a build animation. Use the idle animation instead.
- Do not crash because of division by 0 when building a building without buildcost.
- When building a building without buildcost, complete it immediately instead of
  never.
- Check for mine and size mismatch when parsing building enhancement definitions.
  This prevents crashes at run-time.
- Fixed bug #1792379 - little trees set with editor don't grow.
- Fixed bug #1913902 - collosseum now trains evade 0 and 1.
- Fixed bug that upgraded worker were used in buildings instead of training new
  simple ones.
- Fixed crossplatform network bug (win32 path on unix).
- Fixed disk_filesystem handling on win32.
- Fixed strange, unwanted behaviour of multilined editboxes.
- Fixed loading of settlers 2 maps in widelands.
- Fixed bug that caused segmentation fault when executing
  ./widelands --editor=nonexistent_file.
- Fixed bug that caused segmentation fault when executing
  ./widelands --scenario=nonexistent_file.
- Fixed bug that caused invalid use of uninitialized memory when an animation
  configuration defined playercolor=true but a mask file was missing.
- Fixed bug #1968196 - Scenario-maps aren't loaded as one.
- Fixed bug #1900477 - Objectives description are not translated and objective
  names are not included in PO templates.
- Fixed hotspots of animals.
- Fixed editor height tool dialogs.
- Fixed language-settings-menu for Linux - now Widelands sets system-language
  variable correctly.
- Fixed bug that prevented releasing the last soldier from a trainingsite.
- Fixed memory access errors in the game logic, causing segmentation fault or
  any kind of strange undefined behaviour.
- Fixed memory access error in save game dialog.
- Fixed many memory access errors when trying to read missing sections in
  configuration files.
- Fixed bug that the computer player did not check if a planned large building
  would be completely inside his borders.
- Fixed bugs that the empire wine bush and barbarian flax and reed lived
  forever, blocking the map.
- Fixed bug that it was possible to cheat when destroying an enhanceable
  building by first ordering and upgrade and then immediately ordering the
  destruction of the enhancement-constructionsite. This avoided the burning
  phase, which made the space available immediately.
- Fixed bug that replay was stopped before all commands had been executed.

build-12:
- New feature: Additional scenario event types and trigger types.
- New feature: Flags are automatically placed when holding down Ctrl while building a road.
- New feature: Load maps directly into the editor from the command line (widelands --editor=<filename>).
- New feature: Navigation in edit boxes.
- New feature: Multiplayer games.
- New and greatly improved animations for a number of workers.
- New animals and new animations for existing animals.
- New singleplayer/multiplayer map.
- New tribe 'Atlantids'
- Improved the usability of scrollbars, listselects and tables.
- Improvements of Campaign UI (show only revealed campaigns/scenarios).
- Improvements of all single-/multiplayer maps (rebalancing resources).
- Improved the building statistics menu.
- Improved the scenarios to make use of new features.
- Improved the performance of terrain rendering.
- Improved usability of roadbuilding.
- Improved the handling of player colours.
- Improved recovery from bugs during gameplay.
- Improved the battle system.
- Fixed bugs: Several invalid memory accesses which may have caused random bugs.
- Fixed bug: Workers that become fugitives have a higher chance of finding back to a warehouse. A flag connected to a warehouse must be close to the worker.
- Fixed bug that the objectives menu was not updated when objectives were fulfilled during the game.
- Fixed bug that workers would enter a building before arriving at it (entering it when passing the flag in front of the building). This caused the worker to start seeing from the building too early.
- Fixed network support for direct IP and LAN games.
- Fixed many gamelogic bugs.
- Removed support for GGZ. Please use the forums and IRC channel to meet for multiplayer games.
- Many other bugfixes, optimizations and cleanups.

build-11:
- New feature: Game Tips during loading
- New feature: Progress message windows (Loading-screens)
- New feature: Fog of war
- New feature: Autosave (and emergency-save)
- New feature: Visible Range for bobs and buildings
- New feature: Replay-function
- New feature: volume-sliders for sound and music
- New animations for animals
- New animations for bobs (few trees are falling after they are choped)
- Improvements of the transportationsystem (f.e. ware priority-buttons)
- Improvements of the S2-Map-importation-system.
- Improvements of Multiplayercode.
- Improvements of Campaign UI
- Improvement of "growing tree patch" (seperation of different steps)
- Improvement of single-line-edit-box handling (buttons aren't locked anymore)
- Improvement of Ware-image visualisation program.
- Added 2 new multiplayer maps
- Fix of bug 1633431 (Attacking headquarters crashes game.)
- Fix of bug 1451851 (Upgrade building while delievering to/from cause crash/hang)
- Fix of bug 1690070 (ware: can't move from building A to B)
- Many other bugfixes

build-10:
- Addition of new tribe "The Empire"
- Tribe "Barbarians" was completly overhauled
- New blender graphics for the Barbarians and the Empire by bithunter32
- New blender graphics for the Empire by AlexiaDeath
- Addition of new worlds (Blackland, winterland and desert)
- Addition of few new maps
- Addition of two new Empire-campaign-maps
- Addition of three new ingame music-tracks
- A lot of localisation-bugs were fixed and new strings for translation were added.
- Widelands now supports 14 languages (cs_CZ, de_DE, en_EN, es_ES, fi_FI, fr_FR, gl_ES , he_HE, hu_HU, nl_NL, pl_PL, ru_RU, sk_SK, sv_SE)
- New feature: Mouse-over-hover-help
- New feature: Tribe ware encyclopedia
- Mousewheel support integrated (textarea)
- Now using new fonts (FreeSans and FreeSerif) licensed under GPL
- Battlecode was reworked
- Menu-resolution set to 800x600 (before 640x480) and added new splash
- Work on ingame window-system
- Richtext-handler was overhauled
- A lot of menu texts and alignments were fixed
- A lot of new button-, icon-, background- and campaign-graphics added.
- A lot of code-cleanup
- Bug fixes, bug fixes, bug fixes

build-9half:
- Updated Campaign Missions
- Added proper localisation support (language selectable in options menu)
- Font renderer now renders multiple newlines correctly and in richtext
  accepts <br> as newline
- added localisation patch by Josef + beginning of localisation
- f now triggers fullscreen ingame
- added new maps from winterwind
- implemented new trigger system. This invalidates every scenario, campaign and map.
- save now changes into zip files, added option nozip for debugging reasons
- save changed to save into directory
- added trigger conditionals
- Patch to fix graphic problems:
 * Alpha instead of clrkey
 * Fixed all bugs with MacOSx
 * Caching landscape renderer speeds thinks up
- Sound patch + Music
- RTF Renderer
- show workarea preview
- new font renderer

build-9:
- Chat for multiplayer
- Global Stock, Menue structure reworked
- General statistics menu
- Building statistics menu
- Ware Statistics Menu
- Minor changes in barbarians conf files (Descnames mainly)
- added road textures
- Initial Version of game server. Only chatting.
- First version of barbarians tribe comitted
- Added training site/military patch by Raul Ferriz
- fixed "Worker Type 11 not found" bug
- new Tree Graphics from Wolfgang Weidner
- Added patch from Florian Falkner
  * new Option Dialog
  * UIListselect can have now a selection-indicator
  * WatchWindow functionality is user selectable
- Windows can be minimized (middle mouse or CTRL+left mouse)
- fixed crash when using 32-bit fullscreen mode under win32

build-8:
- some ui ergonomics (new mapselect dialog,
  double click function in listselects)
- resources and default resources support
- loading/saving of maps
- preliminary TT-Font support
- enhancing buildings support
- build animation support
- editor events/trigger
- editor player menu
- editor bob tool

build-7:
- many new buildings
- improved in-game graphics
- improved in-game UI
- movement speed depends on slope of terrain
- improved watch window functionality
- improved the transport system
- added a 32 bit software renderer
- improved rendering quality
- added infrastructure for real-time in-game debugging and inspection
- various code cleanups and bug fixes

build-6:
- graphics reworked
- added functionality for the first few buildings
- reworked transport code
- added multiselect option for editors 'set texture'tool

build-5:
- added Immovable Tool in editor
- added Map_Loader support
- added support for multifield-fieldsels (for editor and to select areas)
- added height tools in the editor
- added item ware code
- added ware transportation (carriers stay on roads and can carry wares)
- construction sites are implemented
- added support for more (and most importantly: compressed) graphics formats

build-4:
- added Warehouse options window
- added ware requests

build-3:
- added DirAnimations for convenience
- added Economy code
- added record/playback code
- added wares code
- added worker code
- use different background images for different menus

build-2:
- options handling redesigned
- introduced System
- added keyboard input
- build symbols react to objects now (can't build next to stones etc...)
- only use 8 different types of trees (like Settlers 2)
- unique windows now remember their position
- improved fieldaction mouse placement for fast click-through
- new structure for tribe data
- new terrain textures
- added "fps" key to animations
- renderer uses player colors
- added flags
- added road building
- split of moving and non-moving objects in hierarchy
