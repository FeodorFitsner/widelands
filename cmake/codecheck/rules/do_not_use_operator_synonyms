#!/usr/bin/python


error_msg = "Do not use operator synonyms, e.g. use \"&&\" rather than \"and\"."

# NOCOM(#GunChleoc) this rule does not exclude string literals, e.g. _(" or ")
# NOCOM(#GunChleoc) this rule does not exclude RST comments or // inline comments added after code
# NOCOM(#GunChleoc) this rule is always triggered twice
regexp = (
		r"""("""
		r"""^(?!((\s*[*])|(\s*/))).+\Wand(\W|$)"""
		r"""|^(?!((\s*[*])|(\s*/))).+\Wbitand(\W|$)"""
		r"""|^(?!((\s*[*])|(\s*/))).+\Wor(\W|$)"""
		r"""|^(?!((\s*[*])|(\s*/))).+\Wxor(\W|$)"""
		r"""|^(?!((\s*[*])|(\s*/))).+\Wnot(\W|$)"""
		r"""|^(?!((\s*[*])|(\s*/))).+\Wcompl(\W|$)"""
		r""")"""
	)

forbidden = [
    "if (foo == 0 and bar > 1)",
    "if (foo == 0 bitand bar > 1)",
    "if (foo == 0 and_eq bar > 1)",
    "if (foo == 0 or bar > 1)",
    "if (foo == 0 or_eq bar > 1)",
    "if (foo == 0 xor bar > 1)",
    "if (foo == 0 xor_eq bar > 1)",
    "if (foo == 0 not bar > 1)",
    "if (foo == 0 not_eq bar > 1)",
    "if (foo == 0 compl bar > 1)"
]

allowed = [
    "if (foo == 0 && bar > 1)",
    "if (foo == 0 & bar > 1)",
    "if (foo == 0 &= bar > 1)",
    "if (foo == 0 || bar > 1)",
    "if (foo == 0 |= bar > 1)",
    "if (foo == 0 ^ bar > 1)",
    "if (foo == 0 ^= bar > 1)",
    "if (foo == 0 ! bar > 1)",
    "if (foo == 0 != bar > 1)",
    "if (foo == 0 ~ bar > 1)"
]

