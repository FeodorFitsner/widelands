/*
 * Copyright (C) 2002-2004, 2006, 2008-2010 by the Widelands Development Team
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 */

#ifndef WL_UI_BASIC_HELPWINDOW_H
#define WL_UI_BASIC_HELPWINDOW_H

#include <memory>

#include "graphic/align.h"
#include "ui_basic/multilinetextarea.h"
#include "ui_basic/unique_window.h"
#include "ui_basic/window.h"

class LuaInterface;

namespace Widelands {
struct BuildingDescr;
}

namespace UI {

/**
 * Shows a help window with an OK button.
 * The helptext should be generated by a LUA file;
 * see scripting/widelands/multiplayer_help.lua for an example.
 */
class HelpWindow : public Window {
public:
	HelpWindow
		(Panel * parent,
		 const std::string & caption,
		 const std::string & helptext,
		 uint32_t width = 0, uint32_t height = 0);

	bool handle_mousepress  (uint8_t btn, int32_t mx, int32_t my) override;
	bool handle_mouserelease(uint8_t btn, int32_t mx, int32_t my) override;

	/// Handle keypresses
	bool handle_key(bool down, SDL_Keysym code) override;

protected:
	void clicked_ok();

private:
	std::unique_ptr<MultilineTextarea> textarea_;
};

/*
 * This is a totally different beast than HelpWindow. It takes
 * a Lua script, runs it and displays it's formatted content
 * as a static text
 */
class LuaTextHelpWindow : public UI::UniqueWindow {
public:
	LuaTextHelpWindow
		(Panel * parent, UI::UniqueWindow::Registry& reg,
		 const Widelands::BuildingDescr& building_description,
		 LuaInterface * const lua,
		 uint32_t width = 300, uint32_t height = 400);
	~LuaTextHelpWindow();

private:
	std::unique_ptr<MultilineTextarea> textarea_;
};

}

#endif  // end of include guard: WL_UI_BASIC_HELPWINDOW_H
